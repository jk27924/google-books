{"ast":null,"code":"import _classCallCheck from \"/Users/ryanjkim/Desktop/UT-Bootcamp/Homework_JHK/google-books/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ryanjkim/Desktop/UT-Bootcamp/Homework_JHK/google-books/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/ryanjkim/Desktop/UT-Bootcamp/Homework_JHK/google-books/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/ryanjkim/Desktop/UT-Bootcamp/Homework_JHK/google-books/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/ryanjkim/Desktop/UT-Bootcamp/Homework_JHK/google-books/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ryanjkim/Desktop/UT-Bootcamp/Homework_JHK/google-books/client/src/components/Pages/HomePage.js\";\nimport React, { Component } from 'react';\nimport '../../App.css'; // import Navbar from \"./components/Nav/Nav\";\n\nimport Jumbotron from \"../Jumbotron/Jumbotron\";\nimport API from '../../utils/API'; // import ArticleBody from '../ArticleBody/ArticleBody';\n\nimport Footer from \"../Footer/Footer\"; // import Drawer from \"./components/ToggleButton/drawer\"\n// import BehindDrawer from \"./components/BehindDrawer/BehindDrawer\" \n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      articles: []\n    };\n\n    _this.loadArticles = function () {\n      API.getArticles().then(function (res) {\n        return _this.setState({\n          articles: res.data\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loadArticles();\n    }\n  }, {\n    key: \"render\",\n    // FOR SIDE DRAWER\n    // state = {\n    //   drawerOpen: false\n    // };\n    // drawerHandler = () => {\n    //   this.setState((originalState) => {\n    //     return {drawerOpen: !originalState.drawerOpen};\n    //   });\n    // };\n    // let drawer;\n    // let behindDrawer;\n    // if (this.state.drawerOpen) {\n    //   drawer = <Drawer />;\n    //   behindDrawer = <BehindDrawer />;\n    // }\n    value: function render() {\n      return React.createElement(\"div\", {\n        style: {\n          height: \"100%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        style: {\n          marginTop: \"64px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(ArticleBody, {\n        articles: this.state.articles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    } // FOR SIDE DRAWER\n    // <div style={{height: \"100%\"}}>\n    //   <Navbar drawerHandler={this.drawerHandler} />\n    //   {drawer}\n    //   {behindDrawer}\n    //   <main style={{marginTop: \"64px\"}}>\n    //     <Jumbotron />\n    //   </main>\n    // </div>\n\n  }]);\n\n  return App;\n}(Component);\n\nexport default App; // Commit msg for 10/05/2019 at around 3:30pm\n// 1. Created models directory with Article.js, index.js, and Note.js. so I could use Mongoose. \n// 2.Worked on my scrape route in Server.js to have those data as an anchor tag. \n// 3. By creating Utils directory with API.js, I could export an object with a method of getArticles, \n// 4. Used componentDidMount to show the scraped articles on the react webpage. \n// 5. Created ArticleBody Component so the data lies on it. \n// 6. Created ArticleCard compoment so each of title and link could be inside of each card. \n// 7. Out of those links, there were some unclickable ones with javscript:void and ones starting with slash for my source site's local webpage. So I needed to use Filter and IF statement to only filter out for those working links.","map":{"version":3,"sources":["/Users/ryanjkim/Desktop/UT-Bootcamp/Homework_JHK/google-books/client/src/components/Pages/HomePage.js"],"names":["React","Component","Jumbotron","API","Footer","App","state","articles","loadArticles","getArticles","then","res","setState","data","catch","err","console","log","height","marginTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,eAAP,C,CACA;;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,GAAP,MAAgB,iBAAhB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB,C,CAEA;AACA;;IAGMC,G;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE;AADJ,K;;UAQRC,Y,GAAe,YAAM;AACnBL,MAAAA,GAAG,CAACM,WAAJ,GACGC,IADH,CACQ,UAAAC,GAAG;AAAA,eACP,MAAKC,QAAL,CAAc;AAAEL,UAAAA,QAAQ,EAAEI,GAAG,CAACE;AAAhB,SAAd,CADO;AAAA,OADX,EAGGC,KAHH,CAGS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAHZ;AAID,K;;;;;;;wCATmB;AAClB,WAAKP,YAAL;AACD;;;AASD;AACE;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;6BAEQ;AACR,aACE;AAAK,QAAA,KAAK,EAAE;AAACU,UAAAA,MAAM,EAAE;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,SAAS,EAAE;AAAZ,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,WAAD;AACE,QAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWC,QADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAIE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CAFJ,CADF;AAWD,K,CAGC;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;EA1DYN,S;;AAiElB,eAAeI,GAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport '../../App.css';\n// import Navbar from \"./components/Nav/Nav\";\nimport Jumbotron from \"../Jumbotron/Jumbotron\";\nimport API from '../../utils/API';\n// import ArticleBody from '../ArticleBody/ArticleBody';\nimport Footer from \"../Footer/Footer\";\n\n// import Drawer from \"./components/ToggleButton/drawer\"\n// import BehindDrawer from \"./components/BehindDrawer/BehindDrawer\" \n\n\nclass App extends Component {\n  state = {\n    articles: []\n  };\n\n  componentDidMount() {\n    this.loadArticles();\n  };\n\n  loadArticles = () => {\n    API.getArticles()\n      .then(res =>\n        this.setState({ articles: res.data }))\n      .catch(err => console.log(err));\n  };\n  \n  // FOR SIDE DRAWER\n    // state = {\n    //   drawerOpen: false\n    // };\n\n    // drawerHandler = () => {\n    //   this.setState((originalState) => {\n    //     return {drawerOpen: !originalState.drawerOpen};\n    //   });\n    // };\n\n    // let drawer;\n    // let behindDrawer;\n\n    // if (this.state.drawerOpen) {\n    //   drawer = <Drawer />;\n    //   behindDrawer = <BehindDrawer />;\n    // }\n\n  render () {\n    return (\n      <div style={{height: \"100%\"}}>\n          {/* <Navbar />  */}\n          <main style={{marginTop: \"64px\"}}>\n            <Jumbotron />\n            <ArticleBody\n              articles={this.state.articles} />\n            <Footer />\n          </main>\n      </div>\n    )\n  }\n\n\n    // FOR SIDE DRAWER\n      // <div style={{height: \"100%\"}}>\n      //   <Navbar drawerHandler={this.drawerHandler} />\n      //   {drawer}\n      //   {behindDrawer}\n      //   <main style={{marginTop: \"64px\"}}>\n      //     <Jumbotron />\n      //   </main>\n      // </div>\n  \n\n\n  \n}\n\nexport default App;\n\n// Commit msg for 10/05/2019 at around 3:30pm\n// 1. Created models directory with Article.js, index.js, and Note.js. so I could use Mongoose. \n// 2.Worked on my scrape route in Server.js to have those data as an anchor tag. \n// 3. By creating Utils directory with API.js, I could export an object with a method of getArticles, \n// 4. Used componentDidMount to show the scraped articles on the react webpage. \n// 5. Created ArticleBody Component so the data lies on it. \n// 6. Created ArticleCard compoment so each of title and link could be inside of each card. \n// 7. Out of those links, there were some unclickable ones with javscript:void and ones starting with slash for my source site's local webpage. So I needed to use Filter and IF statement to only filter out for those working links."]},"metadata":{},"sourceType":"module"}